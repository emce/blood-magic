name: Android Alpha Release

on:
  push:
    tags:
      - '*-android'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Configure Keystore
        run: |
          echo '${{ secrets.KEYSTORE_FILE }}' > release.keystore.asc
          gpg -d --passphrase '${{ secrets.KEYSTORE_PASSPHRASE }}' --batch release.keystore.asc > release.keystore
        env:
          BLOODLINE_RELEASE_KEYSTORE: ~/release.keystore
          BLOODLINE_RELEASE_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          BLOODLINE_RELEASE_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}

      - name: Create Firebase config in local.properties
        run: |
          echo 'firebaseAndroidApiKey="${{ secrets.FIREBASE_ANDROID_API_KEY }}"' > local.properties
          echo 'firebaseIosApiKey="${{ secrets.FIREBASE_IOS_API_KEY }}"' > local.properties
          echo 'firebaseGcmSenderId="${{ secrets.FIREBASE_GCM_SENDER_ID }}"' > local.properties
          echo 'firebaseApplicationId="${{ secrets.FIREBASE_APPLICATION_ID }}"' > local.properties
          echo 'firebaseStorageBucket="${{ secrets.FIREBASE_STORAGE_BUCKET }}"' > local.properties
          echo 'firebaseProjectId="${{ secrets.FIREBASE_PROJECT_ID }}"' > local.properties
          echo 'firebaseDatabaseUrl="${{ secrets.FIREBASE_DATABASE_URL }}"' > local.properties

      - name: Create Google Play Config file
        run: |
          echo "$PLAY_CONFIG_JSON" > play_config.json.b64
          base64 -d -i play_config.json.b64 > play_config.json
        env:
          PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG }}

      - name: Distribute app to Alpha track
        run: ./gradlew :shared:bundleGooglePlayRelease :shared:publishGooglePlayReleaseBundle
