name: Code Checks
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

jobs:
  checks:
    runs-on: self-hosted
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Create Firebase config
        run: |
          echo '
          firebaseAndroidApiKey="${{ secrets.FIREBASE_ANDROID_API_KEY }}"
          firebaseIosApiKey="${{ secrets.FIREBASE_IOS_API_KEY }}"
          firebaseGcmSenderId="${{ secrets.FIREBASE_GCM_SENDER_ID }}"
          firebaseApplicationId="${{ secrets.FIREBASE_APPLICATION_ID }}"
          firebaseStorageBucket="${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          firebaseProjectId="${{ secrets.FIREBASE_PROJECT_ID }}"
          firebaseDatabaseUrl="${{ secrets.FIREBASE_DATABASE_URL }}"
          ' > local.properties
          echo "${{ secrets.FIREBASE_JSON }}" > shared/google-services.json.b64
          base64 -d -i shared/google-services.json.b64 > shared/google-services.json

      - name: Run Checks
        run: ./gradlew check

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            **/build/reports/*    

  build-android-app:
    name: Build Android App
    runs-on: self-hosted
    needs: [ checks ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle

      - name: Create Firebase config
        run: |
          echo '
          firebaseAndroidApiKey="${{ secrets.FIREBASE_ANDROID_API_KEY }}"
          firebaseIosApiKey="${{ secrets.FIREBASE_IOS_API_KEY }}"
          firebaseGcmSenderId="${{ secrets.FIREBASE_GCM_SENDER_ID }}"
          firebaseApplicationId="${{ secrets.FIREBASE_APPLICATION_ID }}"
          firebaseStorageBucket="${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          firebaseProjectId="${{ secrets.FIREBASE_PROJECT_ID }}"
          firebaseDatabaseUrl="${{ secrets.FIREBASE_DATABASE_URL }}"
          ' > local.properties
          echo "${{ secrets.FIREBASE_JSON }}" > shared/google-services.json.b64
          base64 -d -i shared/google-services.json.b64 > shared/google-services.json

      - name: Build Android Sample
        run: ./gradlew :shared:assembleDebug

  build-desktop-app:
    name: Build Desktop App
    runs-on: self-hosted
    needs: [ checks ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle

      - name: Build Desktop App
        run: ./gradlew :shared:packageDmg

  build-ios-app:
    name: Build iOS App
    runs-on: self-hosted
    needs: [ checks ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Xcode version
        run: |
          /usr/bin/xcodebuild -version   

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Xcode version
        run: |
          /usr/bin/xcodebuild -version 

      - name: Setup environment
        uses: ./.github/actions/setup-gradle

      - name: Create Firebase
        run: |
          echo '
          firebaseAndroidApiKey="${{ secrets.FIREBASE_ANDROID_API_KEY }}"
          firebaseIosApiKey="${{ secrets.FIREBASE_IOS_API_KEY }}"
          firebaseGcmSenderId="${{ secrets.FIREBASE_GCM_SENDER_ID }}"
          firebaseApplicationId="${{ secrets.FIREBASE_APPLICATION_ID }}"
          firebaseStorageBucket="${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          firebaseProjectId="${{ secrets.FIREBASE_PROJECT_ID }}"
          firebaseDatabaseUrl="${{ secrets.FIREBASE_DATABASE_URL }}"
          ' > local.properties

      - name: Build iOS Sample
        run: |
          cd iosApp
          xcodebuild -configuration Debug -scheme mobi.cwiklinski.bloodline -sdk iphoneos -destination name='iPhone 16 Pro' build | xcbeautify --renderer github-actions
